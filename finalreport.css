/* ====== Global Styling ====== */
/* I reset the body to remove default margins and paddings to have better control over the layout. 
I chose Arial as the font for its clean, modern look. The background color (#f3f4f6) is a light, 
neutral shade to provide contrast against the container. I used flexbox to center the container 
   both horizontally and vertically, ensuring the content is visually balanced. */
body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f3f4f6;
    text-align: center;
    padding: 0;
    height: 100vh; /* This makes the body take up the full height of the viewport. */
    display: flex; /* Flexbox helps align the container easily. */
    justify-content: center; /* Centers the container horizontally. */
    align-items: center; /* Centers the container vertically. */
    height: 100vh;
}

/* ====== Container for Styling ====== */
/* I created this container to hold all the content. I used a white background to make 
it stand out against the light gray body background. Rounded corners (15px) and a subtle shadow 
(box-shadow) were added to give the container a modern, professional look. I increased the padding 
   for better spacing and set a max-width to ensure the container stays readable on larger screens. */
.container {
    background-color: #ffffff;
    border-radius: 15px;
    padding: 50px; /* Increased padding for a spacious feel. */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3); /* Stronger shadow for emphasis. */
    width: 90%; /* Makes the container responsive on smaller screens. */
    max-width: 600px; /* Prevents the container from becoming too wide on large screens. */
    text-align: center;
}

/* ====== Weather Image Row ======  */
/* I used flexbox again to align the weather images in a horizontal row. Adding 
'justify-content: space-between' ensures even spacing between the images for a clean layout. 
   The margin at the bottom creates separation from the rest of the content. */
.image-row {
    display: flex;
    justify-content: space-between; /* Distributes the images evenly across the row. */
    margin-bottom: 20px; /* Adds spacing below the images. */
    align-items: center;
}

/* ======  Weather Icons ======  */
/* To ensure the icons look consistent, I set their width to 100px and used 'height: auto' to 
   maintain their original aspect ratio. This keeps the images sharp and proportional. */
.weather-icon {
    width: 100px; /* Larger size for better visibility. */
    height: auto;
}

/* ======  Heading Style ======  */
/* I chose a darker text color (#333333) for good readability against the white background. 
   The larger font size (32px) helps the heading stand out as the main title of the page. */
h1 {
    color: #333333;
    font-size: 32px; /* Larger size to draw attention. */
    margin-bottom: 20px;
}

/* ====== Input Field ====== */
/* Modern styling for the temperature input field */
#temperature {
    padding: 10px; /* Comfortable spacing inside the field */
    font-size: 16px; /* Easy-to-read text */
    border: 1px solid #ccc; /* Light gray border for a clean look */
    border-radius: 8px; /* Rounded corners for a modern design */
    outline: none; /* Remove default focus outline */
    transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Smooth focus effect */
    width: 110px; /* Set a reasonable width */
    text-align: center; /* Center-align the text for better UX */
    margin-right: 10px;
}

#temperature:focus {
    border-color: #28a745; /* Highlighted green border on focus */
    box-shadow: 0 0 8px rgba(40, 167, 69, 0.5); /* Subtle glow effect */
}

/* ====== Dropdown Menu ====== */
/* Modern styling for the scale dropdown */
#scale {
    padding: 10px; /* Consistent padding with input field */
    font-size: 16px; /* Easy-to-read text */
    border: 1px solid #ccc; /* Light gray border for consistency */
    border-radius: 8px; /* Rounded corners for a modern design */
    outline: none; /* Remove default focus outline */
    background-color: #ffffff; /* White background for better contrast */
    transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Smooth focus effect */
    cursor: pointer; /* Change cursor to pointer */
}

#scale:focus {
    border-color: #28a745; /* Highlighted green border on focus */
    box-shadow: 0 0 8px rgba(40, 167, 69, 0.5); /* Subtle glow effect */
}

/* ====== Dropdown Arrow Styling ====== */
/* Ensure a modern dropdown arrow */
#scale::-ms-expand {
    display: none; /* Hide default arrow in IE/Edge */
}

#scale {
    appearance: none; /* Remove default arrow on modern browsers */
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="%23333333" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"%3E%3Cpolyline points="6 9 12 15 18 9"%3E%3C/polyline%3E%3C/svg%3E'); /* Custom arrow icon */
    background-repeat: no-repeat;
    background-position: right 10px center; /* Position arrow */
    background-size: 12px;
}

/* ====== Input and Dropdown Layout ====== */
input,
select {
    margin-right: 10px; /* Add spacing between input and dropdown */
}

/* ====== Button Styling (Refined) ====== */
button {
    background-color: #28a745; /* Green call-to-action */
    color: white;
    font-size: 16px; /* Slightly reduced for balance */
    padding: 12px 20px; /* I adjusted padding for a cleaner look */
    border: none;
    border-radius: 8px; /* Rounded corners */
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-block;
    margin-top: 20px;
    align-self: center;
}

button:hover {
    background-color: #218838; /* Darker green on hover */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Subtle hover shadow */
}

button:active {
    background-color: #1e7e34; /* Darker green for active state */
    transform: scale(0.98); /* Slightly smaller button to simulate click */
}

/* ====== Output Container ====== */
/* I created the #output-container to hold and align all the output elements dynamically.
   By using flexbox, I ensure the outputs are centered both horizontally and vertically. */
#output-container {
    display: flex; /* I use flexbox to manage layout easily. */
    flex-direction: column; /* I stack the outputs vertically. */
    justify-content: center; /* This centers the items vertically. */
    align-items: center; /* This centers the items horizontally. */
    width: 100%; /* I set the container to take up the full width of the parent. */
    padding: 10px; /* I add some spacing inside the container for better aesthetics. */
    margin-top: 20px; /* I separate the container from elements above it. */
}

/* ====== Output Styling ====== */
/* I designed the #output element to display individual temperature results. 
   I used a subtle shadow and rounded corners for a modern, clean look. */
#output {
    width: 100%; /* I allow the width to adjust dynamically based on content. *
    max-width: 800px; /* Set to ensure it doesnâ€™t stretch too much */
    font-size: 20px; /* I chose this size to make the text easy to read. */
    color: #333333; /* I set the default text color to match the heading. */
    padding: 15px; /* I added padding for better spacing inside the output box. */
    background-color: #f9f9f9; /* A light background makes the text stand out. */
    border: 1px solid #ccc; /* I use a subtle border for a clean, defined look. */
    border-radius: 5px; /* Rounded corners add a softer, modern feel. */
    text-align: center; /* I center-align the text for better readability. */
    margin-bottom: 10px; /* I add spacing between multiple outputs. */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* A subtle shadow adds depth. */
    transition: transform 0.2s ease, box-shadow 0.2s ease, color 0.3s ease, background-color 0.3s ease; /* I use smooth transitions for better interactivity. */
}

/* ====== Hover Effect ====== */
/* I added a hover effect to make the output visually engaging when the user interacts with it. */
#output:hover {
    transform: scale(1.02); /* Slightly enlarges the output on hover for feedback. */
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* The shadow becomes more prominent on hover. */
}

/* ====== Output List Styling ====== */
/* I use this list inside #output-container to display multiple temperature results dynamically. */
#output-container ul {
    list-style-type: none; /* I remove default bullet points for a cleaner look. */
    padding: 0; /* I remove default padding to ensure proper alignment. */
    margin: 0; /* I remove default margins for consistent spacing. */
}

/* I styled the individual list items to make them visually distinct and easy to read. */
#output-container li {
    font-size: 18px; /* I set a slightly smaller size for list items. */
    margin: 8px 0; /* I added vertical spacing between list items. */
    padding: 8px; /* I added padding for better spacing inside the items. */
    border-radius: 5px; /* Rounded edges match the overall design theme. */
    transition: background-color 0.3s ease; /* Smooth transition for background color changes. */
}

/* ====== Challenge: Temperature-Based Coloring ====== */
/* I used these styles to visually differentiate temperatures by range.
   Each range has a unique text and background color to make the result more intuitive. */

.cold-temperature {
    color: blue; /* Blue indicates cold temperatures. */
    background-color: #e0f7fa; /* A light blue background complements the text color. */
    border: 1px solid blue; /* I add a border to match the text color. */
}

.warm-temperature {
    color: orange; /* Orange indicates warm temperatures. */
    background-color: #fff3e0; /* A light orange background makes it visually distinct. */
    border: 1px solid orange; /* The border color matches the text. */
}

.hot-temperature {
    color: red; /* Red indicates hot temperatures. */
    background-color: #ffebee; /* A light red background complements the text color. */
    border: 1px solid red; /* The border color matches the text. */
}